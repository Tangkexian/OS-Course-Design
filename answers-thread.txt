使用2个线程会导致键丢失的原因是在notxv6/ph.c文件的put()函数中存在竞态条件。以下是可能导致键丢失的事件序列：

线程1和线程2同时执行put()函数。
线程1和线程2同时读取哈希表中的索引位置，以确定要插入的键的位置。
线程1首先计算出要插入的键的位置，并尝试将其插入到哈希表中。
在线程1尝试插入键之前，线程2也计算出要插入的键的位置，并尝试将其插入到哈希表中。
线程2成功将键插入到哈希表中，并更新了哈希表中该位置的键。
线程1尝试将键插入到哈希表中，但由于线程2已经插入了一个键，所以线程1的键被覆盖或丢失。
这个竞态条件是由于多个线程同时访问共享的哈希表数据结构而引起的。在没有锁的情况下，两个线程可以同时读取和修改哈希表的状态，导致键丢失。